{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-12-23T06:54:44.029Z",
    "end": "2021-12-23T06:56:07.656Z",
    "duration": 83627,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f5083d0b-63da-458d-baa9-a6a419dda6f5",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9993b7e5-b245-4f0f-b399-90d19a011303",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "7c8c00b6-56c5-4d26-913a-afa61152ad6c",
              "parentUUID": "9993b7e5-b245-4f0f-b399-90d19a011303",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c8c00b6-56c5-4d26-913a-afa61152ad6c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 235,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9e2e1e90-c594-48bd-8fd6-7c4e4945d695",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "6bbf91ac-e14a-4cb6-a973-4a9bf4a91c84",
              "parentUUID": "9e2e1e90-c594-48bd-8fd6-7c4e4945d695",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "12e12a0a-86f6-4c86-858f-207c0dc1645b",
              "parentUUID": "9e2e1e90-c594-48bd-8fd6-7c4e4945d695",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 180,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "c5faf2d3-b841-423b-a35f-65b94d13b07e",
              "parentUUID": "9e2e1e90-c594-48bd-8fd6-7c4e4945d695",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "c959d03f-adc5-4b6c-a270-cf1e3a55f118",
              "parentUUID": "9e2e1e90-c594-48bd-8fd6-7c4e4945d695",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "41edc5bd-c457-49c6-9535-bd8ca24e01b1",
              "parentUUID": "9e2e1e90-c594-48bd-8fd6-7c4e4945d695",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "eca4e7b3-9d25-4602-b6a7-53bc665e0398",
              "parentUUID": "9e2e1e90-c594-48bd-8fd6-7c4e4945d695",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "4108054c-f4c9-481c-a77e-ed5b1cd29f41",
              "parentUUID": "9e2e1e90-c594-48bd-8fd6-7c4e4945d695",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6bbf91ac-e14a-4cb6-a973-4a9bf4a91c84",
            "12e12a0a-86f6-4c86-858f-207c0dc1645b",
            "c5faf2d3-b841-423b-a35f-65b94d13b07e",
            "c959d03f-adc5-4b6c-a270-cf1e3a55f118",
            "41edc5bd-c457-49c6-9535-bd8ca24e01b1",
            "eca4e7b3-9d25-4602-b6a7-53bc665e0398",
            "4108054c-f4c9-481c-a77e-ed5b1cd29f41"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1431,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cc973c26-82d3-4145-a502-2fdaa1730d7b",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "5e127a01-799d-4012-9223-5a84601e9eb0",
              "parentUUID": "cc973c26-82d3-4145-a502-2fdaa1730d7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "ebe762ec-f883-4764-ae7c-3f28c9bc82b3",
              "parentUUID": "cc973c26-82d3-4145-a502-2fdaa1730d7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e127a01-799d-4012-9223-5a84601e9eb0",
            "ebe762ec-f883-4764-ae7c-3f28c9bc82b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 367,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fb7c0502-816e-4ba7-bdb9-f692cf863bb0",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "ad7ed86f-1fb9-4cc8-8014-8dc94474624c",
              "parentUUID": "fb7c0502-816e-4ba7-bdb9-f692cf863bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "842c9628-70b4-419a-9657-ff6ef5871a39",
              "parentUUID": "fb7c0502-816e-4ba7-bdb9-f692cf863bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c9bba2d7-be0c-4637-b8dd-924fee1c4d77",
              "parentUUID": "fb7c0502-816e-4ba7-bdb9-f692cf863bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "07bbc286-5c42-421c-8ba1-e9c268c5b3b7",
              "parentUUID": "fb7c0502-816e-4ba7-bdb9-f692cf863bb0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad7ed86f-1fb9-4cc8-8014-8dc94474624c",
            "842c9628-70b4-419a-9657-ff6ef5871a39",
            "c9bba2d7-be0c-4637-b8dd-924fee1c4d77",
            "07bbc286-5c42-421c-8ba1-e9c268c5b3b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 691,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b726cb7e-165b-41f8-ab04-3efe652fa2b4",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 345,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "3aeb57f8-2fba-493b-8272-fe8da196d2ce",
              "parentUUID": "b726cb7e-165b-41f8-ab04-3efe652fa2b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 334,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "2aca9c3b-1733-4b9e-b2d2-0991d1c3dd58",
              "parentUUID": "b726cb7e-165b-41f8-ab04-3efe652fa2b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3aeb57f8-2fba-493b-8272-fe8da196d2ce",
            "2aca9c3b-1733-4b9e-b2d2-0991d1c3dd58"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 679,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2754cd43-deb0-47bb-ba80-7d1301a345ec",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "bf35e0a6-c6d0-4844-9385-d848ac4d389a",
              "parentUUID": "2754cd43-deb0-47bb-ba80-7d1301a345ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "bb906095-5eef-4fba-bcc5-dfc1a045aa7a",
              "parentUUID": "2754cd43-deb0-47bb-ba80-7d1301a345ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf35e0a6-c6d0-4844-9385-d848ac4d389a",
            "bb906095-5eef-4fba-bcc5-dfc1a045aa7a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 327,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "da3e948f-197d-47b8-8acf-cf9540da77b0",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 550,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "e972c737-65f6-4e3f-ada2-d2215b431821",
              "parentUUID": "da3e948f-197d-47b8-8acf-cf9540da77b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "e7b0333d-7ae8-491f-87c7-2114d89eda45",
              "parentUUID": "da3e948f-197d-47b8-8acf-cf9540da77b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e972c737-65f6-4e3f-ada2-d2215b431821",
            "e7b0333d-7ae8-491f-87c7-2114d89eda45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9752,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "179c1e43-0c09-4459-bbbd-f72091b755ff",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "bcc6c2d8-5dfb-4dcc-9b81-f7de0ff783d1",
              "parentUUID": "179c1e43-0c09-4459-bbbd-f72091b755ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8968,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "0be395d2-2890-4e37-afe3-5f506e930beb",
              "parentUUID": "179c1e43-0c09-4459-bbbd-f72091b755ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1530,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "d8699d57-5585-4707-96e0-ad90c58b862e",
              "parentUUID": "179c1e43-0c09-4459-bbbd-f72091b755ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bcc6c2d8-5dfb-4dcc-9b81-f7de0ff783d1",
            "0be395d2-2890-4e37-afe3-5f506e930beb",
            "d8699d57-5585-4707-96e0-ad90c58b862e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12834,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f63f3ab8-bbf5-43b6-9e6a-5d1e6d27fc13",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "eb565718-9f67-4f72-b6a0-df1fb699f6ba",
              "parentUUID": "f63f3ab8-bbf5-43b6-9e6a-5d1e6d27fc13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "5bbfdf18-6a6b-4a03-9619-61a575cabcd2",
              "parentUUID": "f63f3ab8-bbf5-43b6-9e6a-5d1e6d27fc13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "d454307c-ac8a-4ce8-bc68-4bfa3625c282",
              "parentUUID": "f63f3ab8-bbf5-43b6-9e6a-5d1e6d27fc13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "077a97e0-1f1a-43aa-8ee0-c7f7c78a6a1c",
              "parentUUID": "f63f3ab8-bbf5-43b6-9e6a-5d1e6d27fc13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eb565718-9f67-4f72-b6a0-df1fb699f6ba",
            "5bbfdf18-6a6b-4a03-9619-61a575cabcd2",
            "d454307c-ac8a-4ce8-bc68-4bfa3625c282",
            "077a97e0-1f1a-43aa-8ee0-c7f7c78a6a1c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2876,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "313126d4-f758-4504-ba45-000c77883f40",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4355,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44349/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44349/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44349/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44349/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44349/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44349/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44349/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44349/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "35689ff5-4613-4b5b-a5aa-95ba7d5fcde3",
              "parentUUID": "313126d4-f758-4504-ba45-000c77883f40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4488,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44349/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44349/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44349/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44349/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44349/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44349/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44349/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44349/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2eba5e89-7e69-4fcc-920d-6fef6669389f",
              "parentUUID": "313126d4-f758-4504-ba45-000c77883f40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4416,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44349/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44349/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44349/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44349/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44349/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44349/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44349/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44349/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c106bdbe-d62c-4f58-b04b-b9c1edec81e0",
              "parentUUID": "313126d4-f758-4504-ba45-000c77883f40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4410,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44349/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44349/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44349/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44349/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44349/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44349/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44349/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44349/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "707f6cb1-62ed-4ee6-bc70-e7ef71d7a159",
              "parentUUID": "313126d4-f758-4504-ba45-000c77883f40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4397,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44349/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44349/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44349/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44349/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44349/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44349/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44349/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44349/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fe800e78-0194-4139-8339-6e44eabec0a2",
              "parentUUID": "313126d4-f758-4504-ba45-000c77883f40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4452,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44349/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44349/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44349/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44349/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44349/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44349/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44349/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44349/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ec15fd29-2b4c-4dbb-8d2c-59df57b9c49a",
              "parentUUID": "313126d4-f758-4504-ba45-000c77883f40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4395,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44349/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44349/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44349/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44349/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44349/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44349/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44349/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44349/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4d05de67-c296-4658-aee6-de81dbce6ad1",
              "parentUUID": "313126d4-f758-4504-ba45-000c77883f40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4380,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44349/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44349/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44349/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44349/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44349/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44349/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44349/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44349/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1b3b8b9c-dec6-430e-9f25-79e422518c50",
              "parentUUID": "313126d4-f758-4504-ba45-000c77883f40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4302,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44349/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44349/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44349/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44349/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44349/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44349/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44349/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44349/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "29f809ee-1286-4443-bc42-28f3a03b6e37",
              "parentUUID": "313126d4-f758-4504-ba45-000c77883f40",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "35689ff5-4613-4b5b-a5aa-95ba7d5fcde3",
            "2eba5e89-7e69-4fcc-920d-6fef6669389f",
            "c106bdbe-d62c-4f58-b04b-b9c1edec81e0",
            "707f6cb1-62ed-4ee6-bc70-e7ef71d7a159",
            "fe800e78-0194-4139-8339-6e44eabec0a2",
            "ec15fd29-2b4c-4dbb-8d2c-59df57b9c49a",
            "4d05de67-c296-4658-aee6-de81dbce6ad1",
            "1b3b8b9c-dec6-430e-9f25-79e422518c50",
            "29f809ee-1286-4443-bc42-28f3a03b6e37"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39595,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b7a483a1-e47f-4090-b0d5-0f2d18ad9ba5",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4397,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44349/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44349/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44349/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44349/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44349/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44349/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44349/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44349/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "28ba281b-67a8-4897-a29e-7655f0bd9be8",
              "parentUUID": "b7a483a1-e47f-4090-b0d5-0f2d18ad9ba5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4381,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44349/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44349/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44349/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44349/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44349/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44349/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44349/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44349/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "27ca3183-eac1-4412-9dbd-8d56d8bd3601",
              "parentUUID": "b7a483a1-e47f-4090-b0d5-0f2d18ad9ba5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4323,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44349/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44349/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44349/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44349/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44349/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44349/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44349/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44349/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44349/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3d8b5494-dcf6-4299-9111-9959360841b2",
              "parentUUID": "b7a483a1-e47f-4090-b0d5-0f2d18ad9ba5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "28ba281b-67a8-4897-a29e-7655f0bd9be8",
            "27ca3183-eac1-4412-9dbd-8d56d8bd3601",
            "3d8b5494-dcf6-4299-9111-9959360841b2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13101,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0fee675d-24b7-473c-8ed1-07e8235e50c9",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 409,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44349/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44349/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44349/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44349/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44349/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44349/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44349/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44349/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44349/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44349/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "420f85d9-1f9d-4f18-8e5e-066a19e40623",
              "parentUUID": "0fee675d-24b7-473c-8ed1-07e8235e50c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 440,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44349/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44349/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44349/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44349/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44349/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44349/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44349/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44349/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44349/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44349/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44349/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44349/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "01ac23cc-781c-40e4-b06b-04d9a098f571",
              "parentUUID": "0fee675d-24b7-473c-8ed1-07e8235e50c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "420f85d9-1f9d-4f18-8e5e-066a19e40623",
            "01ac23cc-781c-40e4-b06b-04d9a098f571"
          ],
          "pending": [],
          "skipped": [],
          "duration": 849,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}